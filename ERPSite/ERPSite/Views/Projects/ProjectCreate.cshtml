@model ERPSite.Models.ProjectCreateViewModel

@{
    ViewBag.Title = "Новый проект";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Новый проект</h2>

@using (Html.BeginForm("ProjectCreate", "Projects", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Organization, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Organization, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Organization, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Start, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.End, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.End, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.End, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectTypeName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.ProjectTypeID,
                  new SelectList(Model.ProjectTypes, "Id", "Name"), new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectsSkills, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table>
                    @for (int i = 0; i < Model.ProjectsSkills.Count(); i++)
                    {
                        <tr>
                            <td>
                                @Html.CheckBoxFor(m => m.ProjectsSkills[i].flag)
                                <label for="ProjectsSkills[@i].flag"> @Html.DisplayFor(m => m.ProjectsSkills[i].Name)</label>
                            </td>
                            <td>

                                @Html.HiddenFor(m => m.ProjectsSkills[i].Id)
                                @Html.HiddenFor(m => m.ProjectsSkills[i].Name)
                            </td>
                        </tr>
                    }
                </table>

            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2"> Файли</label>

            <div id="multiple">
                <input type="file" class="multiple" name="files" multiple accept=".jpg,.png,.doc,.docx,.pdf" />
            </div>
            <div id="single">
                <input type="file" class="single" name="files" accept=".jpg,.png,.doc,.docx,.pdf" /><br />
                <input type="file" class="single" name="files" accept=".jpg,.png,.doc,.docx,.pdf" /><br />
                <input type="file" class="single" name="files" /><br />
            </div>

            @section Scripts{
                <script type="text/javascript">
                    $(function () {
                        if (window.FileReader != null) {
                            $('#single').hide();
                            $('.single').prop('disabled', true);
                        } else {
                            $('#multiple').hide();
                            $('.multiple').prop('disabled', true);
                        }
                    });
                </script>
            }
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Создать" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Вернуться обратно", "Index")
</div>
